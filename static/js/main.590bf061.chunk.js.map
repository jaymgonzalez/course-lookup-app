{"version":3,"sources":["components/HomePage.js","components/AboutPage.js","components/common/Header.js","appDispatcher.js","actions/actionsTypes.js","stores/courseStore.js","hooks/useAuthorsData.js","components/CourseList.js","api/apiUtils.js","api/courseApi.js","actions/courseActions.js","api/authorApi.js","components/CoursesPage.js","components/NotFoundPage.js","components/common/TextInput.js","components/CourseForm.js","components/ManageCoursePage.js","components/App.js","index.js"],"names":["HomePage","className","to","AboutPage","href","React","Component","Header","activeStyle","color","exact","dispatcher","Dispatcher","_courses","store","callback","this","on","removeListener","emit","slug","find","course","courseId","EventEmitter","register","action","actionType","actionTypes","push","emitChange","courses","map","id","filter","parseInt","useAuthorsData","useState","_authorsData","_setAuthorsData","useEffect","getAuthorsData","a","fetch","response","json","jsonData","CourseList","props","authorsData","key","title","author","authorId","name","category","onClick","deleteCourse","handleResponse","ok","status","text","error","Error","handleError","console","baseUrl","process","saveCourse","method","headers","body","JSON","stringify","then","catch","courseApi","savedCourse","dispatch","loadCourses","getAuthors","CoursesPage","courseStore","getCourses","setCourses","authorApi","authors","setAuthors","onChange","addChangeListener","length","removeChangeListener","_authors","NotFoundPage","TextInput","wrapperClass","htmlFor","label","value","defaultProps","CourseForm","onSubmit","errors","i","type","ManageCoursePage","setErrors","setCourse","match","params","courseActions","getCourseBySlug","target","event","preventDefault","_errors","Object","keys","formIsValid","history","toast","success","App","autoClose","hideProgressBar","path","component","render","document","getElementById"],"mappings":"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","file":"static/js/main.590bf061.chunk.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"react-router-dom\"\nfunction HomePage() {\n  return (\n    <div className=\"jumbotron\">\n      <h1>My course Admin Page</h1>\n      <p>React, JavaScript, AWS and all the courses that I did in the past few years.</p>\n      <Link to=\"courses\" className=\"btn btn-primary\">\n        Courses\n      </Link>\n    </div>\n  )\n}\n\nexport default HomePage\n","import React from \"react\"\n\nclass AboutPage extends React.Component {\n  render() {\n    return (\n      <>\n        <h2>About</h2>\n        <p>This app uses React.</p>\n        <p>It was created to show the courses I have working on</p>\n        <p>For more info please visit: <a href='https://jaymgonzalez.com'>my personal website</a></p>\n      </>\n    )\n  }\n}\n\nexport default AboutPage\n","import React from \"react\"\nimport { NavLink } from \"react-router-dom\"\n\nfunction Header() {\n  const activeStyle = { color: \"orange\" }\n  return (\n    <nav>\n      <NavLink activeStyle={activeStyle} exact to=\"/\">\n        Home\n      </NavLink>\n      {\" | \"}\n      <NavLink activeStyle={activeStyle} to=\"/courses\">\n        Courses\n      </NavLink>\n      {\" | \"}\n      <NavLink activeStyle={activeStyle} to=\"/about\">\n        About\n      </NavLink>\n    </nav>\n  )\n}\n\nexport default Header\n","import { Dispatcher } from \"flux\"\nconst dispatcher = new Dispatcher()\nexport default dispatcher\n","export default {\n  CREATE_COURSE: \"CREATE_COURSE\",\n  LOAD_COURSES: \"LOAD_COURSES\",\n  UPDATE_COURSE: \"UPDATE_COURSE\",\n  DELETE_COURSE: \"DELETE_COURSE\",\n}\n","import { EventEmitter } from \"events\"\nimport Dispatcher from \"../appDispatcher\"\nimport actionTypes from \"../actions/actionsTypes\"\n\nconst CHANGE_EVENT = \"change\"\nlet _courses = []\n\nclass CourseStore extends EventEmitter {\n  addChangeListener(callback) {\n    this.on(CHANGE_EVENT, callback)\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(CHANGE_EVENT, callback)\n  }\n\n  emitChange() {\n    this.emit(CHANGE_EVENT)\n  }\n\n  getCourses() {\n    return _courses\n  }\n\n  getCourseBySlug(slug) {\n    return _courses.find((course) => course.slug === slug)\n  }\n\n  deleteCourse(courseId) {}\n}\n\nconst store = new CourseStore()\n\nDispatcher.register((action) => {\n  switch (action.actionType) {\n    case actionTypes.CREATE_COURSE:\n      _courses.push(action.course)\n      store.emitChange()\n      break\n    case actionTypes.LOAD_COURSES:\n      _courses = action.courses\n      store.emitChange()\n      break\n    case actionTypes.UPDATE_COURSE:\n      _courses = _courses.map((course) =>\n        course.id === action.course.id ? action.course : course\n      )\n      store.emitChange()\n      break\n    case actionTypes.DELETE_COURSE:\n      _courses = _courses.filter(\n        (course) => course.id !== parseInt(action.id, 10)\n      )\n      store.emitChange()\n      break\n    default:\n  }\n})\n\nexport default store\n","import { useState, useEffect } from 'react'\n\nexport const useAuthorsData = () => {\n\n  const url = 'https://course-pluralsight-api.herokuapp.com/authors'\n\n  const [_authorsData, _setAuthorsData] = useState([]);\n\n  useEffect(() => {\n    getAuthorsData()\n  }, [])\n\n\n  const getAuthorsData = async () => {\n    const response = await fetch(url);\n    const jsonData = await response.json();\n    _setAuthorsData(jsonData);\n  }\n\n  return _authorsData\n\n}\n\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\"\nimport { useAuthorsData } from \"../hooks/useAuthorsData\";\n\nfunction CourseList(props) {\n\n  const authorsData = useAuthorsData()\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Author</th>\n          <th>Category</th>\n          <th>&nbsp;</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.courses.map((course) => {\n          return (\n            <tr key={course.id}>\n              <td>\n                <Link to={\"/course/\" + course.slug}>{course.title}</Link>\n              </td>\n              <td>{authorsData.map(author => author.id === course.authorId && author.name)}</td>\n              <td>{course.category}</td>\n              <td>\n                <button\n                  className=\"btn btn-outline-danger\"\n                  onClick={() => props.deleteCourse(course.id)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n  )\n}\n\nCourseList.propTypes = {\n  courses: PropTypes.array.isRequired,\n}\n\nexport default CourseList\n","export async function handleResponse(response) {\n  if (response.ok) return response.json();\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\nexport function handleError(error) {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  throw error;\n}\n","import { handleResponse, handleError } from \"./apiUtils\"\nconst baseUrl = process.env.REACT_APP_API_URL + \"/courses/\"\n\nexport function getCourses() {\n  return fetch(baseUrl).then(handleResponse).catch(handleError)\n}\n\nexport function getCourseBySlug(slug) {\n  return fetch(baseUrl + \"?slug=\" + slug)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok.\")\n      return response.json().then((courses) => {\n        if (courses.length !== 1) throw new Error(\"Course not found: \" + slug)\n        return courses[0] // should only find one course for a given slug, so return it.\n      })\n    })\n    .catch(handleError)\n}\n\nexport function saveCourse(course) {\n  return fetch(baseUrl + (course.id || \"\"), {\n    method: course.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify({\n      ...course,\n      // Parse authorId to a number (in case it was sent as a string).\n      authorId: parseInt(course.authorId, 10),\n    }),\n  })\n    .then(handleResponse)\n    .catch(handleError)\n}\n\nexport function deleteCourse(courseId) {\n  return fetch(baseUrl + courseId, { method: \"DELETE\" })\n    .then(handleResponse)\n    .catch(handleError)\n}\n","import dispatcher from \"../appDispatcher\"\nimport * as courseApi from \"../api/courseApi\"\nimport actionTypes from \"./actionsTypes\"\n\nexport function saveCourse(course) {\n  return courseApi.saveCourse(course).then((savedCourse) => {\n    dispatcher.dispatch({\n      actionType: course.id\n        ? actionTypes.UPDATE_COURSE\n        : actionTypes.CREATE_COURSE,\n      course: savedCourse,\n    })\n  })\n}\n\nexport function loadCourses() {\n  return courseApi.getCourses().then((courses) => {\n    dispatcher.dispatch({\n      actionType: actionTypes.LOAD_COURSES,\n      courses,\n    })\n  })\n}\n\nexport function deleteCourse(id) {\n  return courseApi.deleteCourse(id).then(() => {\n    dispatcher.dispatch({\n      actionType: actionTypes.DELETE_COURSE,\n      id,\n    })\n  })\n}\n","import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.REACT_APP_API_URL + \"/authors/\";\n\nexport function getAuthors() {\n  return fetch(baseUrl)\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function saveAuthor(author) {\n  return fetch(baseUrl + (author.id || \"\"), {\n    method: author.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify(author)\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function deleteAuthor(authorId) {\n  return fetch(baseUrl + authorId, { method: \"DELETE\" })\n    .then(handleResponse)\n    .catch(handleError);\n}\n","import React, { useState, useEffect } from \"react\"\nimport courseStore from \"../stores/courseStore\"\nimport CourseList from \"./CourseList\"\nimport { Link } from \"react-router-dom\"\nimport { loadCourses, deleteCourse } from \"../actions/courseActions\"\nimport * as authorApi from \"../api/authorApi\"\n\nfunction CoursesPage() {\n  const [courses, setCourses] = useState(courseStore.getCourses())\n  const [authors, setAuthors] = useState(authorApi.getAuthors())\n\n  useEffect(() => {\n    courseStore.addChangeListener(onChange)\n    if (courseStore.getCourses().length === 0) loadCourses()\n    return () => courseStore.removeChangeListener(onChange)\n  }, [])\n\n  function onChange() {\n    setCourses(courseStore.getCourses())\n  }\n\n  useEffect(() => {\n    authorApi.getAuthors().then((_authors) => setAuthors(_authors))\n  }, [])\n\n  return (\n    <>\n      <h2>Courses</h2>\n      <Link className=\"btn btn-primary\" to=\"/course\">\n        Add Course\n      </Link>\n      <CourseList\n        authors={authors}\n        courses={courses}\n        deleteCourse={deleteCourse}\n      />\n    </>\n  )\n}\n\nexport default CoursesPage\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nfunction NotFoundPage() {\n  return (\n    <div>\n      <h2>Page Not Found</h2>\n      <p>\n        <Link to=\"/\">Back to Home</Link>\n      </p>\n    </div>\n  )\n}\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nfunction TextInput(props) {\n  let wrapperClass = \"form-group\"\n  if (props.error.length > 0) {\n    wrapperClass += \" has-error\"\n  }\n  return (\n    <div className={wrapperClass}>\n      <label htmlFor={props.id}>{props.label}</label>\n      <div className=\"field\">\n        <input\n          id={props.id}\n          name={props.name}\n          onChange={props.onChange}\n          value={props.value}\n          className=\"form-control\"\n        />\n      </div>\n      {props.error && <div className=\"alert alert-danger\">{props.error}</div>}\n    </div>\n  )\n}\n\nTextInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  error: PropTypes.string,\n}\n\nTextInput.defaultProps = {\n  error: \"\",\n}\n\nexport default TextInput\n","import React from \"react\"\nimport TextInput from \"./common/TextInput\"\nimport PropTypes from \"prop-types\"\nimport { Redirect } from \"react-router-dom\"\nimport { useAuthorsData } from '../hooks/useAuthorsData'\n\n\nfunction CourseForm(props) {\n\n  const authorsData = useAuthorsData()\n\n  if (typeof props.course !== \"undefined\") {\n    return (\n      <form onSubmit={props.onSubmit}>\n        <TextInput\n          id=\"title\"\n          label=\"Title\"\n          onChange={props.onChange}\n          name=\"title\"\n          value={props.course.title}\n          error={props.errors.title}\n        />\n        <div className=\"form-group\">\n          <label htmlFor=\"author\">Author</label>\n          <div className=\"field\">\n            <select\n              id=\"author\"\n              name=\"authorId\"\n              onChange={props.onChange}\n              value={props.course.authorId || \"\"}\n              className=\"form-control\"\n            >\n              <option value=\"\" />\n              {authorsData.map((author, i) => <option key={i} value={author.id}>{author.name}</option>)}\n            </select>\n          </div>\n          {props.errors.authorId && (\n            <div className=\"alert alert-danger\">{props.errors.authorId}</div>\n          )}\n        </div>\n\n        <TextInput\n          id=\"category\"\n          label=\"Category\"\n          name=\"category\"\n          onChange={props.onChange}\n          value={props.course.category}\n          error={props.errors.category}\n        />\n\n        <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\n      </form>\n    )\n  } else {\n    return <Redirect to=\"/404\" />\n  }\n}\n\nCourseForm.propTypes = {\n  course: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n}\n\nexport default CourseForm\n","import React, { useState, useEffect } from \"react\"\nimport CourseFrom from \"./CourseForm\"\nimport courseStore from \"../stores/courseStore\"\nimport { toast } from \"react-toastify\"\nimport * as courseActions from \"../actions/courseActions\"\n\nconst ManageCoursePage = (props) => {\n  const [errors, setErrors] = useState({})\n  const [courses, setCourses] = useState(courseStore.getCourses())\n  const [course, setCourse] = useState({\n    id: null,\n    slug: \"\",\n    title: \"\",\n    authorId: null,\n    category: \"\",\n  })\n\n  useEffect(() => {\n    courseStore.addChangeListener(onChange)\n    const slug = props.match.params.slug\n    if (courses.length === 0) {\n      courseActions.loadCourses()\n    } else if (slug) {\n      setCourse(courseStore.getCourseBySlug(slug))\n    }\n    return () => courseStore.removeChangeListener(onChange)\n  }, [courses.length, props.match.params.slug])\n\n  function onChange() {\n    setCourses(courseStore.getCourses())\n  }\n\n  function handleChange({ target }) {\n    setCourse({ ...course, [target.name]: target.value })\n  }\n\n  function formIsValid() {\n    const _errors = {}\n\n    if (!course.title) _errors.title = \"Title is required\"\n    if (!course.authorId) _errors.authorId = \"Author is required\"\n    if (!course.category) _errors.category = \"Category is required\"\n\n    setErrors(_errors)\n\n    return Object.keys(_errors).length === 0\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault()\n    if (!formIsValid()) return\n    courseActions.saveCourse(course).then(() => {\n      props.history.push(\"/courses\")\n      toast.success(\"Couse saved correctly.\")\n    })\n  }\n  return (\n    <>\n      <h2>Mange Course</h2>\n      <CourseFrom\n        errors={errors}\n        course={course}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n    </>\n  )\n}\n\nexport default ManageCoursePage\n","import React from \"react\"\nimport HomePage from \"./HomePage\"\nimport AboutPage from \"./AboutPage\"\nimport Header from \"./common/Header\"\nimport CoursesPage from \"./CoursesPage\"\nimport { Route, Switch, Redirect } from \"react-router-dom\"\nimport NotFoundPage from \"./NotFoundPage\"\nimport ManageCoursePage from \"./ManageCoursePage\"\nimport { ToastContainer } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\"\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <ToastContainer autoClose={3000} hideProgressBar />\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/courses\" component={CoursesPage} />\n        <Route path=\"/about\" component={AboutPage} />\n        <Route path=\"/course/:slug\" component={ManageCoursePage} />\n        <Route path=\"/course\" component={ManageCoursePage} />\n        <Route path=\"/404\" component={NotFoundPage} />\n        <Redirect to=\"/404\" />\n      </Switch>\n    </div>\n  )\n}\n\nexport default App\n","import \"bootstrap/dist/css/bootstrap.min.css\"\nimport React from \"react\"\nimport { render } from \"react-dom\"\nimport App from \"./components/App\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\nrender(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}